@page "/przedmioty/komponenty/dodaj/{idPrzed:int}"
@page "/przedmioty/komponenty/{id:int}/edytuj"
@using Services
@using Models
@inject IKomponentyPrzedmiotowService komponentyService
@inject IPrzedmiotyService przedmiotyService
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager

<PageTitle>@Title</PageTitle>
<h3>@Title</h3>

@*<h3>@component.Id @component.IdPrzed @component.IdKomponentu</h3>*@

<EditForm Model="component" OnValidSubmit="Save">
	<label for="komponent">Komponent</label>
	<InputSelect id="komponent" @bind-Value="component.IdKomponentu" class="form-control">
		<option value="0" hidden>Wybierz</option>
		@foreach (var item in items)
		{
			<option value="@item.IdPrzed">@item.Nazwa</option>
		}
	</InputSelect>

	<br />
	<button type="submit" class="btn btn-primary">Zatwierdź</button>&nbsp;&nbsp;
	<button type="button" class="btn btn-secondary" @onclick="(() => Cancel(component.IdPrzed))">Anuluj</button>

</EditForm>


@code {
	[Parameter]
	public int id { get; set; }
	[Parameter]
	public int idPrzed { get; set; }
	private string message = string.Empty;
	private string errorMessage = string.Empty;
	KomponentyPrzedmiotow component = new();
	private string Title = "Dodaj komponent";
	List<Przedmioty> items = new();

	protected override void OnInitialized()
	{
		if (id > 0)
		{
			component = komponentyService.GetById(id);
			Title = "Edytuj komponent dla " + przedmiotyService.GetById(component.IdPrzed).Nazwa;
		}
		else
		{
			List<KomponentyPrzedmiotow> components = new();
			components = komponentyService.GetAll();
			component.IdPrzed = idPrzed;
		}
		items = przedmiotyService.GetAllAlfabetical();
		base.OnInitialized();
	}

	private void Save()
	{
		message = "Zaczekaj...";
		string result = string.Empty;
		if(component.Id == 0)
		{
			result = komponentyService.Add(component);
		}
		else
		{
			result = komponentyService.UpdateRow(component.Id, component.IdKomponentu);
		}
		if (result == "ok")
		{
			message = "Pomyślnie dodano przedmiot.";
			component = new();
			navManager.NavigateTo($"/przedmioty/{idPrzed}", true);
		}
		else
		{
			message = "Nie udało się zapisać.";
			errorMessage = result;
		}
	}

	private void Cancel(int idPrzed)
	{
		navManager.NavigateTo($"/przedmioty/{idPrzed}", true);
	}
}
