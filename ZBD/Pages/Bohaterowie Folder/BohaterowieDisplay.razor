@page "/bohaterowie/{name}"
@using Services
@using Models
@inject IBohaterowieService bohaterowieService
@inject ICounterService counterService
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager

<PageTitle>@name</PageTitle>
<h3>@name - @champion.Tytuł <button class="btn btn-primary oi oi-pencil" @onclick="(() => ShowEditChampion(champion.Nazwa))"></button></h3>
<h4>@champion.Klasa</h4>

<table>
    <tbody>
        <tr>
            <td rowspan="3" colspan="1" valign="top">
                <div class="image">
                    <img src="@champion.Obraz">
                    <br />
                    <br />
                    <button class="btn btn-primary" @onclick="(() => ShowAddCounter(champion.Nazwa))">Dodaj kontrę</button>

                </div>
            </td>
            <div>
                <td><h5>@champion.KrotkiOpis</h5></td>
            </div>
        </tr>
        <tr>
            <td>
                <div>
                    <table class="table" title="Statystyki">
                        <thead>
                            <tr>
                                <th>Atak</th>
                                <th>Obrona</th>
                                <th>Magia</th>
                                <th>Trudność</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@champion.Atak</td>
                                <td>@champion.Obrona</td>
                                <td>@champion.Magia</td>
                                <td>@champion.Trudnosc</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    @if(champion.Kontras.Count() > 0)
                    {
                        <label><strong>Kontry:</strong></label>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var counter in champion.Kontras)
                                {
                                    <tr>
                                        <td>
                                            <img src="@counter.Ikona" width="64px" height="64px" />
                                        </td>
                                        <td>@counter.Nazwa</td>
                                        <td>
                                            <button class="btn btn-primary oi oi-pencil" @onclick="(() => ShowEditCounter(champion.Nazwa, counter.Nazwa))"></button>
                                        </td>
                                        <td>
                                            <button class="btn btn-danger oi oi-trash" @onclick="async ()=> await DeleteCounter(champion.Nazwa, counter.Nazwa)"></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
                
            </td>
        </tr>
    </tbody>
</table>
<br />

<br />

<h3>@message</h3>

@code {
    [Parameter]
    public string? name { get; set; }
    private string message = string.Empty;
    Bohaterowie champion = new Bohaterowie();

    protected override void OnInitialized()
    {
        champion = bohaterowieService.GetByName(name);
        base.OnInitialized();
    }

    void ShowEditChampion(string name)
    {
        navManager.NavigateTo($"bohaterowie/{name}/edytuj");
    }

    private void ShowEditCounter(string bohater, string kontra)
    {
        navManager.NavigateTo($"/bohaterowie/kontry/{bohater}/{kontra}");
    }

    private void ShowAddCounter(string bohater)
    {
        navManager.NavigateTo($"/bohaterowie/kontry/{bohater}/dodaj");
    }

    private async Task DeleteCounter(string bohater, string kontra)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Czy jesteś pewien, że chcesz usunąć kontrę?");
        if (confirmed)
        {
            if (counterService.Delete(bohater, kontra))
            {
                message = "Pomyślnie usunięto!";
                navManager.NavigateTo($"/bohaterowie/{name}", true);
            }
            else
                message = "Nie udało się usunąć.";
        }
    }
}
