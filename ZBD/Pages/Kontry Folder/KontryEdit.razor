@page "/bohaterowie/kontry/{bohater}/{kontra}"
@using Services
@using Models
@inject ICounterService counterService
@inject IBohaterowieService bohaterowieService
@inject NavigationManager navManager

<PageTitle>Edytuj kontrę</PageTitle>
<h3>Edytuj kontrę dla @bohater</h3>

<EditForm Model="newCounter" OnValidSubmit="Save">
	<label for="kontra">Kontra</label>
	<InputSelect id="kontra" @bind-Value="newCounter.nowaKontra" class="form-control">
		<option value="@string.Empty">Wybierz</option>
		@foreach (var champion in champions)
		{
			<option value="@champion.Nazwa">@champion.Nazwa</option>
		}
	</InputSelect>
	<br />
	<button type="submit" class="btn btn-primary">Zatwierdź</button>&nbsp;&nbsp;
	<button type="button" class="btn btn-secondary" @onclick="(() => Cancel())">Anuluj</button>
</EditForm>

<br />
<h3>@message</h3>

@code {
	[Parameter]
	public string bohater { get; set; }
	[Parameter]
	public string kontra { get; set; }

	public string message = string.Empty;

	List<Bohaterowie> champions = new();

	NewCounter newCounter = new();

	protected override void OnInitialized()
	{
		champions = bohaterowieService.GetAll();
		base.OnInitialized();
	}

	private void Save()
	{
		if(counterService.EditCounter(bohater, kontra, newCounter.nowaKontra))
		{
			navManager.NavigateTo($"/bohaterowie/{bohater}", true);
			message = "Pomyślnie zmieniono!";
		}
		else
		{
			message = "Nie udało się zmienić.";
		}
	}

	private void Cancel()
	{
		navManager.NavigateTo($"/bohaterowie/{bohater}", true);
	}
}
